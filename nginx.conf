# SEO Crawler Detection
map $http_user_agent $is_crawler {
    default 0;
    ~*(googlebot|bingbot|yandexbot|baiduspider|facebookexternalhit|twitterbot|linkedinbot|whatsapp|telegram|discord|slack|skype|line) 1;
    ~*(google|bing|yandex|baidu|facebook|twitter|linkedin) 1;
}

# Crawler-specific upstream
upstream crawler_prerender {
    server prerender:3000;  # Or your prerender service
}

server {
    listen 80;
    server_name your-domain.com;
    root /path/to/your/frontend/build;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Sitemap and robots.txt
    location ~ ^/sitemap.*\.xml(\.gz)?$ {
        proxy_pass http://unix:/home/ubuntu/offplan_backend/offplan_backend_agent/gunicorn.sock;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location = /robots.txt {
        proxy_pass http://unix:/home/ubuntu/offplan_backend/offplan_backend_agent/gunicorn.sock;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Django static files
    location /static/ {
        alias /home/ubuntu/offplan_backend/offplan_backend_agent/staticfiles/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Django admin
    location /admin/ {
        proxy_pass http://unix:/home/ubuntu/offplan_backend/offplan_backend_agent/gunicorn.sock;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
    }

    # Django API with caching
    location /api/ {
        proxy_pass http://unix:/home/ubuntu/offplan_backend/offplan_backend_agent/gunicorn.sock;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering on;
        proxy_cache api_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
        proxy_cache_valid 200 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout invalid_header updating;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Property images proxy with caching
    location /media/property-images/ {
        proxy_pass https://panel.estaty.app/property_units_images/;
        proxy_set_header Host panel.estaty.app;
        proxy_buffering on;
        proxy_cache images_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 1d;
        proxy_cache_valid 404 1h;
        proxy_cache_use_stale error timeout invalid_header updating;
        expires 1d;
        add_header Cache-Control "public";
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Robots-Tag "noindex";
        try_files $uri =404;
    }

    # OPTION 1: Prerender service for crawlers
    location / {
        if ($is_crawler) {
            # Route crawlers to prerender service
            proxy_pass http://crawler_prerender;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Prerender-Token "your-prerender-token";
            proxy_set_header User-Agent $http_user_agent;
            break;
        }

        # Regular users get SPA
        try_files $uri $uri/ /index.html;

        # Additional headers for SEO
        add_header X-Robots-Tag "index, follow" always;
        add_header Link "</sitemap.xml>; rel=\"sitemap\"" always;
    }

    # OPTION 2: Simple crawler detection without prerender
    # location / {
    #     if ($is_crawler) {
    #         # Return prerendered static version for crawlers
    #         try_files /prerendered$uri.html /prerendered/index.html @fallback;
    #     }
    #
    #     # Regular SPA routing
    #     try_files $uri $uri/ /index.html;
    # }

    # OPTION 3: Cache-based prerendering
    # location / {
    #     if ($is_crawler) {
    #         proxy_pass http://127.0.0.1:8080;  # Local prerender cache
    #         break;
    #     }
    #
    #     try_files $uri $uri/ /index.html;
    # }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Block common exploit attempts
    location ~ /\. {
        deny all;
    }

    location ~ /(wp-admin|wp-login|phpmyadmin|adminer) {
        deny all;
    }
}

# Cache configurations
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=1g;
proxy_cache_path /var/cache/nginx/images levels=1:2 keys_zone=images_cache:50m max_size=5g;

# Rate limiting
limit_req_zone $binary_remote_addr zone=crawler:10m rate=1r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

# Upstream for prerender service (if using Option 1)
# upstream crawler_prerender {
#     server prerender-service.com:80;
#     keepalive 32;
# }
